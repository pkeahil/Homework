
# Paul Lupeituu
# netID: pkl170000
# CS 2340
# November 14, 2020
# 
# Program to help us visualize instruction count and cache use for these sorting algorithms.
# This one is selection sort.	
						
									
					.data
array:	.word	19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		19,-2,95,26,83,17,-5,69,-16,10,45,-17,88,27,-13,67,-48,6,-66,40
		
length:	.word	500

			.text
		
# Algorithm:

# for(int i = 0; i < length - 1; i++) {
#	minIndex = i; minValue = arr[i];
#	for(int j = i + 1; j < length; j++) {
#		if(arr[j] < minValue) {
#			minValue = arr[j];
#			minIndex = j;
#		}
#	}
#	temp = arr[i];
#	arr[i] = arr[minIndex];
#	arr[minIndex] = temp;
# }
SelectionSort:
	la	$s0, array
	lw	$s1, length
	subi	$s2, $s1, 1
	li	$t0, -1
	li	$t1, -1
	li	$t2, 0
	li	$t3, 0
	outerLoop:
		bge	$t2, $s2, exitLoop
		addi	$t0, $t3, 0
		lw	$t1, array($t3)
		addi	$t4, $t2, 1
		addi	$t5, $t3, 4
		innerLoop:
			bge	$t4, $s1, continueOuter
			lw	$s3, array($t5)
			bge	$s3, $t1, continueInner
			lw	$t1, array($t5)
			addi	$t0, $t5, 0
		continueInner:
			addi	$t4, $t4, 1
			addi	$t5, $t5, 4
			j	innerLoop
	continueOuter:
		lw	$t6, array($t3)
		lw	$t7, array($t0)
		sw	$t7, array($t3)
		sw	$t6, array($t0)
		addi	$t2, $t2, 1
		addi	$t3, $t3, 4
		j	outerLoop
	exitLoop:
	
	li	$v0, 10
	syscall
